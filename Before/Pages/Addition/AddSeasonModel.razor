@inject BlazorService BlazorService

<div class="modal" style="display:@(IsVisible ? "block" : "none");">
    <div class="modal-backdrop" @onclick="ToggleModal"></div>
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="@ModelSeason" OnValidSubmit="@OnSubmit">
                <div>
                    <label>Season: </label>
                    <InputSelect @bind-Value="@ModelSeason.SeasonId">
                        @foreach (var season in BlazorService.Seasons)
                        {
                            <option value="@season.Id">@season.Name</option>
                        }
                    </InputSelect>
                </div>
                <button type="submit">Add</button>
                <button type="button" @onclick="Hide">Close</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private SeasonModel ModelSeason = new();
    private bool IsVisible { get; set; } = false;

    [Parameter] public EventCallback<SeasonModel> OnSeasonProduct { get; set; }

    private async Task OnSubmit()
    {
        await OnSeasonProduct.InvokeAsync(ModelSeason);
        ModelSeason = new SeasonModel();
        ToggleModal();
    }

    public void ToggleModal()
    {
        IsVisible = !IsVisible;
        StateHasChanged();
    }
    public void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }
}
